{
  "Serilog": {
    "Using": [ "Serilog.Settings.Configuration", "Serilog.Sinks.Console", "Serilog.Sinks.File" ],
    "IsLogEnable": true,
    "MinimumLevel": "Information",
    "Microsoft": "Information",
    "Microsoft.Hosting.Lifetime": "Information",
    "Microsoft.EntityFrameworkCore.Database.Command": "Warning",
    "SelfLogEnable": false,
    "SelfLogFilePath": "C:\\GraphQlDemo\\logs\\",
    "Properties": {
      "ApplicationName": "GrapQLPOC"
    },
    "WriteTo": [
      {
        "Name": "Console"

      },
      {
        "Name": "Logger",
        "Args": {
          "configureLogger": {
            "Filter": [
              {
                "Name": "ByIncludingOnly",
                "Args": {
                  "expression": "(@Level = 'Error' or @Level = 'Fatal')"
                }
              }
            ],
            "WriteTo": [
              {
                "Name": "File",
                "Args": {
                  "path": "Logs/logs.txt",
                  "outputTemplate": "[{Timestamp:HH:mm:ss} {SourceContext} [{Level}] {Message}{NewLine}{Exception}",
                  "formatter": {
                    "type": "Serilog.Formatting.Compact.CompactJsonFormatter, Serilog.Formatting.Compact"
                  }
                }
              }
            ]
          }
        }
      },
      {
        "Name": "Logger",
        "Args": {
          "configureLogger": {
            "Filter": [
              {
                "Name": "ByIncludingOnly",
                "Args": {
                  "expression": "StartsWith(SourceContext, 'Najm.GraphQL.WebAPI.Extensions.AuditLogMiddlewareExtensions')"
                }
              }
            ],
            "WriteTo": [

              {
                "Name": "File",
                "Args": {
                  "path": "Logs/auditlogs.txt",
                  "outputTemplate": "[{Timestamp:HH:mm:ss} {SourceContext} [{Level}] {Message}{NewLine}{Exception}",
                  "formatter": {
                    "type": "Serilog.Formatting.Compact.CompactJsonFormatter, Serilog.Formatting.Compact"
                  }
                }
              }
            ]
          }
        }
      }
    ]
  }
}